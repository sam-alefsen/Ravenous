{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","business","this","props","className","src","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","id","arr","map","index","getBusiness","businesses","mapBusinesses","sortByOptions","SearchBar","term","location","sortBy","sortByOptionsKeys","Object","keys","handleSortByChange","bind","handleTermChange","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","object","key","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","categories","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2de6f474.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nexport default class Business extends React.Component {\n  render() {\n    const business = this.props.business;\n    \n    return (\n    <div className=\"Business\">\n      <div className=\"image-container\">\n        <img src={business.imageSrc} alt=''/>\n      </div>\n      <h2>{business.name}</h2>\n      <div className=\"Business-information\">\n        <div className=\"Business-address\">\n          <p>{business.address}</p>\n          <p>{business.city}</p>\n          <p>{business.state} {business.zipCode}</p>\n        </div>\n        <div className=\"Business-reviews\">\n          <h3>{business.category}</h3>\n          <h3 className=\"rating\">{business.rating} stars</h3>\n          <p>{business.reviewCount} reviews</p>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}","import React from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business.js';\n\nexport default class BusinessList extends React.Component {\n  getBusiness(business) {\n    return <Business key={business.id} business={business} />\n  }\n\n  mapBusinesses(arr) {\n    return arr.map((business, index) => {\n      return this.getBusiness(business, index);\n    });\n  }\n\n  render() {\n    const businesses = this.props.businesses;\n    return (\n      <div className=\"BusinessList\">\n        {this.mapBusinesses(businesses)}\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './SearchBar.css';\n\nconst sortByOptions = {\n  'Best Match': 'best_match',\n  'Highest Rated': 'rating',\n  'Most Reviewed': 'review_count',\n  'Distance': 'distance'\n}\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term:'',\n      location:'',\n      sortBy:'best_match'\n    }\n    this.sortByOptionsKeys = Object.keys(sortByOptions);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  getSortByClass(sortByOption) {\n    return this.state.sortBy === sortByOption ? 'active' : '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy:sortByOption})\n  }\n\n  handleTermChange(event) {\n    this.setState({term:event.target.value})\n  }\n\n  handleLocationChange(event) {\n    this.setState({location:event.target.value})\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n  }\n\n  renderSortByOptions(object, arr) {\n    let listItems = arr.map(key => {\n      let value = object[key];\n      return <li key={key} className={this.getSortByClass(value)} onClick={this.handleSortByChange.bind(this, value)}>{value}</li>;\n    })\n    return listItems;\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions(sortByOptions, this.sortByOptionsKeys)}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\n        </div>\n        <div className=\"SearchBar-submit\">\n          <button onClick={this.handleSearch}>Let's Go!</button>\n        </div>\n      </div>\n    )\n  }\n}","const apiKey = 'Q99hsqIx7IhBefkU7R44KV-i5gMhx3NJ-VPPg9c4to-514uTvQlhbeOIwQvz7nVoJObmCTgGL-htetFptR79SlKah_yh9q9pta-xb8xS7vPc1w05Nn9HF1PNunoMYHYx';\n\nconst Yelp = {\n\n search(term, location, sortBy) {\n  return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n    headers:{\n      Authorization: `Bearer ${apiKey}`\n    }\n  }).then(response => {\n    return response.json();\n  }).then(jsonResponse => {\n    if(jsonResponse.businesses) {\n      return jsonResponse.businesses.map(business => {\n        return {\n          id:business.id,\n          imageSrc:business.image_url,\n          name:business.name,\n          address:business.location.address1,\n          city:business.location.city,\n          state:business.location.state,\n          zipCode:business.location.zipCode,\n          categories:business.categories,\n          reviewCount:business.review_count\n        }\n      });\n    }\n  })\n }\n}\n\nexport default Yelp;","import React from 'react';\nimport './App.css';\n\nimport BusinessList from '../BusinessList/BusinessList.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\n\nimport Yelp from '../../util/Yelp.js';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses:[]\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({businesses: businesses});\n    });\n  }\n\n  render() {\n    return (\n    <div className=\"App\">\n      <h1>ravenous</h1>\n      <SearchBar searchYelp={this.searchYelp}/>\n      <BusinessList businesses={this.state.businesses} />\n    </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}